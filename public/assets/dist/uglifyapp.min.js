var app = angular.module('app', []);

app.config(function($interpolateProvider){
    $interpolateProvider.startSymbol('{[{').endSymbol('}]}');
}).run(function ($rootScope) {
    //$rootScope.backgroundAllowed = true;
});
app.constant("Modernizr", Modernizr);

$.ajaxSetup({
    headers:{
        'X-CSRF-TOKEN':$('meta[name="csrf-token"]').attr('content')
    }
});
$.validator.setDefaults({
    errorElement: 'span'
});


app.controller('backgroundController', ['$scope','Modernizr','screenWidthService','ismobile','isBackgroundAllowed', function($scope, Modernizr,screenWidthService,ismobile,isBackgroundAllowed) {
    function changeLetterColor() {
        var cols = $('.link-color');
        var length = cols.length;
        for(i=0; i<length; i++) {
            cols[i].className = 'link-color-black';
        }
    }
    function makerainthunderday()
    {
        $('html').addClass("dialluvioso");
        if (isBackgroundAllowed) {
            var cloudsnumber;
            if (screenWidthService == 'md' || screenWidthService == 'lg') {
                cloudsnumber = 8;
                var rain = new Rain(150, 'dropstorm');
            }
            else if (screenWidthService == 'sm') {
                cloudsnumber = 6;
                var rain = new Rain(100, 'dropstorm');
            }
            else {
                cloudsnumber = 4;
                var rain = new Rain(50, 'dropstorm');
            }
            for (i = 0; i < cloudsnumber; i++) {
                var cloud = new CloudRain();
                $('body').append(cloud.getCloud());
            }
            addThunder(cloudsnumber);
        }
        changeLetterColor();
    }
    function makerainthundernight()
    {
        $('html').addClass("noche");
        if (isBackgroundAllowed) {
            var cloudsnumber;
            if (screenWidthService == 'md' || screenWidthService == 'lg') {
                cloudsnumber = 8;
                var rain = new Rain(150, 'dropstorm');
            }
            else if (screenWidthService == 'sm') {
                cloudsnumber = 6;
                var rain = new Rain(100, 'dropstorm');
            }
            else {
                cloudsnumber = 4;
                var rain = new Rain(50, 'dropstorm');
            }
            for (i = 0; i < cloudsnumber; i++) {
                var cloud = new CloudRain();
                $('body').append(cloud.getCloud());
            }
            var moon = new Moon();
            $('body').append(moon.getSun());
            addThunder(cloudsnumber);
        }
    }
    function makerainnight()
    {
        $('html').addClass("noche");
        if (isBackgroundAllowed ) {
            var cloudsnumber;
            if (screenWidthService == 'md' || screenWidthService == 'lg') {
                cloudsnumber = 12;
                var rain = new Rain(200, 'drop');
            }
            else if (screenWidthService == 'sm') {
                cloudsnumber = 8;
                var rain = new Rain(100, 'drop');
            }
            else {
                cloudsnumber = 4;
                var rain = new Rain(50, 'drop');
            }
            for (i = 0; i < cloudsnumber; i++) {
                var cloud = new CloudRain();
                $('body').append(cloud.getCloud());
            }
            var moon = new Moon();
            $('body').append(moon.getSun());
        }

    }
    function makerainday()
    {
        $('html').addClass("dialluvioso");
        if (isBackgroundAllowed) {
            var cloudsnumber;
            if (screenWidthService == 'md' || screenWidthService == 'lg') {
                cloudsnumber = 12;
                var rain = new Rain(200, 'drop');
            }
            else if (screenWidthService == 'sm') {
                cloudsnumber = 8;
                var rain = new Rain(100, 'drop');
            }
            else {
                cloudsnumber = 4;
                var rain = new Rain(50, 'drop');
            }
            for (i = 0; i < cloudsnumber; i++) {
                var cloud = new CloudRain();
                $('body').append(cloud.getCloud());
            }
        }
        changeLetterColor();
    }
    function makesnownight()
    {
        $('html').addClass("noche");
        if (isBackgroundAllowed) {
            var snownumber;
            var cloudsnumber;
            if (screenWidthService == 'md' || screenWidthService == 'lg') {
                snownumber = 150;
                cloudsnumber = 12;
            }
            else if (screenWidthService == 'sm') {
                snownumber = 100;
                cloudsnumber = 8;
            }
            else {
                snownumber = 60;
                cloudsnumber = 4;
            }
            for (i = 0; i < snownumber; i++) {
                var snow = new Snow();
                $('body').append(snow.getSnow());
            }
            for (i = 0; i < cloudsnumber; i++) {
                var cloud = new CloudSnowNight();
                $('body').append(cloud.getCloud());
            }
            var moon = new Moon();
            $('body').append(moon.getSun());
        }
    }
    function makesnowday()
    {
        $('html').addClass("dia");
        if (isBackgroundAllowed) {
            var snownumber;
            var cloudsnumber;
            if (screenWidthService=='md' || screenWidthService=='lg') {
                snownumber = 150;
                cloudsnumber = 12;
            }
            else if (screenWidthService=='sm') {
                snownumber = 100;
                cloudsnumber = 8;
            }
            else {
                snownumber = 60;
                cloudsnumber = 4;
            }
            for (i = 0; i < snownumber; i++) {
                var snow = new Snow();
                $('body').append(snow.getSnow());
            }
            for (i = 0; i < cloudsnumber; i++) {
                var cloud = new CloudSnow();
                $('body').append(cloud.getCloud());
            }
            var sun = new Sun();
            $('body').append(sun.getSun());
        }
        changeLetterColor();
    }
    //------for night--------------------
    function makenight()
    {
        $('html').addClass("noche");
        if (isBackgroundAllowed) {
            var starnumber;
            var cloudsnumber;
            if (screenWidthService=='md' || screenWidthService=='lg') {
                starnumber = 80;
                cloudsnumber = 5;
            }
            else if (screenWidthService=='sm') {
                starnumber = 60;
                cloudsnumber = 3;
            }
            else {
                starnumber = 40;
                cloudsnumber = 2;
            }
            for (i = 0; i < cloudsnumber; i++) {
                var cloud = new CloudNight();
                $('body').append(cloud.getCloud());
            }
            for (i = 0; i < starnumber; i++) {
                var star = new Star();
                $('body').append(star.getStar());
            }
            var moon = new Moon();
            $('body').append(moon.getSun());
        }
    }
    //-----------for day----------
    function makeday()
    {
        $('html').addClass("dia");
        if (isBackgroundAllowed) {
            var cloudsnumber;
            if(screenWidthService=='md' || screenWidthService=='lg') cloudsnumber=10;
            else if (screenWidthService=='sm') cloudsnumber=7;
            else cloudsnumber=5;


            for (i = 0; i < cloudsnumber; i++) {
                var  cloud= new Cloud();
                $('body').append(cloud.getCloud());
            }
            var  sun= new Sun();
            $('body').append(sun.getSun());
        }
        changeLetterColor();
    }

    var Cloud = function ()
    {
        this.type=randomIntFromInterval(1,3);
        this.move=randomIntFromInterval(100,150);
        this.left=randomIntFromInterval(1,100);
        this.top=randomIntFromInterval(1,50);
        this.scale=randomIntFromInterval(30,99);
        this.div = document.createElement('div');
        this.div.className='cloud'+this.type;
        this.getCloud = function(){
            this.div.setAttribute('style',
                '-webkit-animation: moveclouds '+this.move+'s linear infinite;'+
                '-moz-animation: moveclouds '+this.move+'s linear infinite;'+
                '-o-animation: moveclouds '+this.move+'s linear infinite;'+
                '-webkit-animation-delay:'+ this.delay+'s;'+
                '-moz-animation-delay:'+ this.delay+'s;'+
                '-o-animation-delay:'+ this.delay+'s;'+
                'left: '+this.left+'%;'+
                'top:'+this.top+'%;'+
                '-webkit-transform: scale(0.'+this.scale+');'+
                '-moz-transform: scale(0.'+this.scale+');'+
                'transform: scale(0.'+this.scale+');'
            );
            return this.div;
        };
    }
    var Sun = function ()
    {
        this.div = document.createElement('div');
        this.div.className='sun';
        this.getSun = function(){
            return this.div;
        };
    }
    var Moon= function ()
    {
        Sun.call(this);
        this.div.className='moon';
    }
    var Star= function ()
    {
        this.div = document.createElement('div');
        this.div.className='star';
        this.left=randomIntFromInterval(1,199);
        this.top=randomIntFromInterval(5,80);
        this.scale=randomIntFromInterval(30,99);
        this.div.setAttribute('style',
            'left: '+this.left+'%;'+
            'top:'+this.top+'%;'+
            '-webkit-transform: scale(0.'+this.scale+');'+
            '-moz-transform: scale(0.'+this.scale+');'+
            'transform: scale(0.'+this.scale+');'
        );
        this.getStar = function(){
            return this.div;
        };
    }
    var CloudNight = function ()
    {
        Cloud.call(this);
        this.div.className='cloud'+this.type+' cloudnight';

    }
    var Snow= function ()
    {
        this.type=randomIntFromInterval(1,3);
        this.delay=randomIntFromInterval(1,40);
        this.move=randomIntFromInterval(40,45);
        this.left=randomIntFromInterval(1,100);
        this.top=randomIntFromInterval(10,20);
        this.ketframe=randomIntFromInterval(1,2);
        this.div = document.createElement('div');
        this.div.innerHTML = '*';
        this.div.className='snow'+this.type;
        this.div.setAttribute('style',
            '-webkit-animation: snowfall'+this.ketframe+' '+this.move+'s linear infinite;'+
            '-moz-animation: snowfall'+this.ketframe+' '+this.move+'s  linear infinite;'+
            '-o-animation: snowfall'+this.ketframe+' '+this.move+'s  linear infinite;'+
            '-webkit-animation-delay:'+ this.delay+'s;'+
            '-moz-animation-delay:'+ this.delay+'s;'+
            '-o-animation-delay:'+ this.delay+'s;'+
            'left: '+this.left+'%;'+
            'top:'+this.top+'%;'
        );
        this.getSnow = function(){
            return this.div;
        };
    }
    var CloudSnow= function ()
    {
        Cloud.call(this);
        this.top=randomIntFromInterval(1,20);
    }
    var CloudSnowNight= function ()
    {
        CloudNight.call(this);
        this.top=randomIntFromInterval(1,20);
    }
    var CloudRain= function ()
    {

        CloudSnow.call(this);
        this.div.className='cloud'+this.type+' cloudrain';
    }
    var Rain= function (dropsnumber,clase)
    {
        for( i=1;i<dropsnumber;i++) {
            this.div = document.createElement('div');
            this.div.className=clase;
            this.delay=randomIntFromInterval(1,999);
            this.left=randomIntFromInterval(1,100);
            this.top=randomIntFromInterval(10,20);
            this.div.setAttribute('style',
                '-webkit-animation-delay:'+ this.delay+'ms;'+
                '-moz-animation-delay:'+ this.delay+'ms;'+
                '-o-animation-delay:'+ this.delay+'ms;'+
                'left: '+this.left+'%;'+
                'top:'+this.top+'%;'
            );
            $('body').append(this.div);
        }
    }
    var Thunder= function (x,y)
    {
        this.numberrain=10;
        this.width=5;
        for( i=1;i<=this.numberrain;i++)
        {
            this.angule=randomIntFromInterval(-40,40);
            this.div = document.createElement('div');
            this.div.className='trueno';
            this.height=randomIntFromInterval(2,10);
            if(i % 2 == 0)
            {
                this.width--;
                this.angule2=randomIntFromInterval(-40,40);
                this.div2 = document.createElement('div');
                this.div2.className='trueno';
                this.height2=randomIntFromInterval(1,5);
                this.div2.setAttribute('style',
                    /*'-webkit-animation: snowfall '+move+'s linear infinite;'+
                     '-moz-animation: snowfall '+move+'s  linear infinite;'+
                     '-o-animation: snowfall '+move+'s  linear infinite;'+*/
                    '-webkit-transform-origin: top left;-moz-transform-origin: top left;transform-origin: top left;'+
                    '-moz-transform: rotate('+this.angule2+'deg);'+
                    '-webkit-transform: rotate'+this.angule2+'deg);'+
                    'transform: rotate('+this.angule2+'deg);'+
                    'left: 0%;'+
                    'top:90%;'+
                    'width:'+this.width+'px;'+
                    'height:'+this.height2+'vh;'
                );
                this.lastdiv.appendChild(this.div2);
            }
            this.div.setAttribute('style',
                /*'-webkit-animation: thunder '+move+'s linear infinite;'+
                 '-moz-animation: thunder '+move+'s  linear infinite;'+
                 '-o-animation: thunder '+move+'s  linear infinite;'+*/
                '-webkit-transform-origin: top left;-moz-transform-origin: top left;transform-origin: top left;'+
                '-moz-transform: rotate('+this.angule+'deg);'+
                '-webkit-transform: rotate'+this.angule+'deg);'+
                'transform: rotate('+this.angule+'deg);'+
                'left: '+x+'%;'+
                'top:'+y+'%;'+
                'width:'+this.width+'px;'+
                'height:'+this.height+'vh;'
            );
            if(i==1){this.firstdiv=this.div;x=0;y=90;}
            else {
                this.lastdiv.appendChild(this.div);
            }
            this.lastdiv=this.div;
        }
        this.getThunder = function(){
            return this.firstdiv;
        };
    }
    function addThunder(cloudsnumber) {
        var  thunder= new Thunder(50,95);
        var nubes=$( ".cloudrain" ).toArray();
        var nube = randomIntFromInterval(0,cloudsnumber-1);
        nubes[nube].appendChild(thunder.getThunder());
        setTimeout(function(){
            thunder.getThunder().remove();
        }, 900);
        var rand = randomIntFromInterval(3000,5000);
        setTimeout(function() {
            addThunder(cloudsnumber);
        }, rand);
    };
    function randomIntFromInterval(min,max)
    {
        return Math.floor(Math.random()*(max-min+1)+min);
    }
    function backgroundController()
    {
        switch(randomIntFromInterval(1,8)) {
            case 1:
                makeday();
                break;
            case 2:
                makenight();
                break;
            case 3:
                makesnowday();
                break;
            case 4:
                makesnownight();
                break;
            case 5:
                makerainday();
                break;
            case 6:
                makerainnight();
                break;
            case 7:
                makerainthundernight();
                break;
            case 8:
                makerainthunderday();
                break;

            default:
                makeday();
        }
    }
    backgroundController();
}]);






app.controller('chatController', ['$scope','$rootScope','Modernizr', function($scope,$rootScope  , Modernizr) {
    //var chat = $("#chatwindow");
    //var msg = $("#messagebox");
    //
    //var socket = new WebSocket("ws://127.0.0.1:2000");
    //var open=false;
    //
    //function addMessage(msg)
    //{
    //    chat.html( chat.html()+"<p>"+msg+"</p>");
    //}
    //
    //msg.keypress( function (event) {
    //    if (event.charCode != 13)
    //        return;
    //    if (msg.val() == "" || !open)
    //        return;
    //
    //    event.preventDefault();
    //    socket.send(JSON.stringify({
    //        id:'2',
    //        msg: msg.val(),
    //        chatroom:'22'
    //    }));
    //    conn.send(JSON.stringify({command: "subscribe", channel: "mychannel"}));
    //
    //    addMessage(msg.val());
    //    msg.val("");
    //});
    //
    //socket.onopen=function()
    //{
    //    open = true;
    //    addMessage("Connected");
    //
    //}
    //socket.onmessage=function(evt)
    //{
    //    var data = JSON.parse(evt.data);
    //    addMessage(data.msg);
    //}
    //socket.onclose=function()
    //{
    //    open = false;
    //    addMessage("Disconnected");
    //}



}]);






app.controller('loginController', ['$scope', function($scope) {
    //$scope.login=false;
    //$scope.register=false;
    //$scope.password=false;
    //$scope.$watch('loginTab', function () {
    //    $scope.state($scope.loginTab);
    //});
    //$scope.state = function(flag) {
    //    //
    //    switch(flag) {
    //        case 'login':
    //            loginValidator.resetForm();
    //            $scope.login=true;
    //            $scope.register=false;
    //            $scope.password=false;
    //            break;
    //        case 'register':
    //            registerValidator.resetForm();
    //            $scope.login=false;
    //            $scope.register=true;
    //            $scope.password=false;
    //            break;
    //        case 'password':
    //            passwordValidator.resetForm();
    //            $scope.login=false;
    //            $scope.register=false;
    //            $scope.password=true;
    //            break;
    //        default:
    //            loginValidator.resetForm();
    //            $scope.login=true;
    //            $scope.register=false;
    //            $scope.password=false;
    //            break;
    //    }
    //};
    //$scope.cleanAdvice = function() {
    //    $('.advice').remove()
    //};
    //
    //var loginValidator=$("#login").validate({
    //    submitHandler: function(form) {
    //        $('#login_button').attr('pressed',true);
    //        form.submit();
    //    }
    //});
    //var registerValidator=$("#register-form").validate({
    //    rules: {
    //        email:{
    //         //check_email:true
    //         remote:
    //         {
    //             type: "POST",
    //             url: 'register/emailverification',
    //             data: {
    //                 email: function() {
    //                     return $( ".register-email" ).val();
    //                 }
    //             }
    //         }
    //        },
    //        password: {
    //            minlength:6
    //        },
    //        password_confirmation: {
    //            minlength:6,
    //            equalTo: "#password"
    //        }
    //    },
    //    submitHandler: function(form) {
    //        $('#register_button').attr('pressed',true);
    //        form.submit();
    //    }
    //});
    //var passwordValidator=$("#password-form").validate({
    //    submitHandler: function(form) {
    //        $('#password_button').attr('pressed',true);
    //        form.submit();
    //    }
    //});
}]);






app.controller('homeController', ['$scope','$rootScope', function($scope,$rootScope) {


}]);







app.controller('loginController', ['$scope', function($scope) {
    $scope.login=false;
    $scope.register=false;
    $scope.password=false;
    $scope.$watch('loginTab', function () {
        $scope.state($scope.loginTab);
    });
    $scope.state = function(flag) {
        //
        switch(flag) {
            case 'login':
                loginValidator.resetForm();
                $scope.login=true;
                $scope.register=false;
                $scope.password=false;
                break;
            case 'register':
                registerValidator.resetForm();
                $scope.login=false;
                $scope.register=true;
                $scope.password=false;
                break;
            case 'password':
                passwordValidator.resetForm();
                $scope.login=false;
                $scope.register=false;
                $scope.password=true;
                break;
            default:
                loginValidator.resetForm();
                $scope.login=true;
                $scope.register=false;
                $scope.password=false;
                break;
        }
    };
    $scope.cleanAdvice = function() {
        $('.advice').remove()
    };

    var loginValidator=$("#login").validate({
        submitHandler: function(form) {
            $('#login_button').attr('pressed',true);
            form.submit();
        }
    });
    var registerValidator=$("#register-form").validate({
        rules: {
            email:{
             //check_email:true
             remote:
             {
                 type: "POST",
                 url: 'register/emailverification',
                 data: {
                     email: function() {
                         return $( ".register-email" ).val();
                     }
                 }
             }
            },
            password: {
                minlength:6
            },
            password_confirmation: {
                minlength:6,
                equalTo: "#password"
            }
        },
        submitHandler: function(form) {
            $('#register_button').attr('pressed',true);
            form.submit();
        }
    });
    var passwordValidator=$("#password-form").validate({
        submitHandler: function(form) {
            $('#password_button').attr('pressed',true);
            form.submit();
        }
    });
}]);






app.controller('resetController', ['$scope', function($scope) {
    $("#reset-form").validate({
        rules: {
            password: {
                minlength:6
            },
            password_confirmation: {
                minlength:6,
                equalTo: "#password"
            }
        },
        submitHandler: function(form) {
            $('#register_button').attr('pressed',true);
            form.submit();
        }
    });
}]);





app
.directive('inputClear', function () {
    return {
        restrict: 'A',
        link: function (scope, element) {
            $(element).val(null);
        }
    };
});
app.factory('screenWidthService', function() {
    var size;
    var screenwidth=$( window ).width();
    if (1199<screenwidth) size='lg';
    else if(991<screenwidth && screenwidth<1200) size='md';
    else if (767<screenwidth && screenwidth<992)  size='sm';
    else  size='xs';
    return size;
})
.factory('ismobile', function() {
    var backgroundanimationallowed = false; //initiate as false
    if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)
        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0,4))) backgroundanimationallowed = true;
    return backgroundanimationallowed;
})
.factory('isBackgroundAllowed',['$location','ismobile','Modernizr', function($location,ismobile,Modernizr) {
    if (!Modernizr.cssall) {
        return false
    }
    if (ismobile)
    {
        return false
    }
    if (window.location.pathname=="" || window.location.pathname=="/" ) {
        return false
    } //for home background
    return true;
}])